name: 🤖 Automated Flaky Test PR

on:
  schedule:
    # Run every hour at minute 0
    - cron: '0 * * * *'
  workflow_dispatch:
    # Allow manual triggering for testing

env:
  PR_BRANCH: automated-flaky-test-run
  PR_TITLE: "🤖 Automated flaky test run"

jobs:
  merge-existing-pr:
    name: 🔄 Merge Previous PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Merge existing automated PR
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          # Find existing automated PR
          pr_number=$(gh pr list --label "automated" --json number --jq '.[0].number // empty')
          
          if [ -n "$pr_number" ]; then
            echo "🔄 Found existing automated PR #$pr_number"
            
            # Check if PR is mergeable (all checks passed)
            pr_status=$(gh pr view $pr_number --json mergeStateStatus --jq '.mergeStateStatus')
            
            if [ "$pr_status" = "CLEAN" ] || [ "$pr_status" = "UNSTABLE" ]; then
              echo "✅ PR #$pr_number is ready to merge"
              gh pr merge $pr_number --squash --delete-branch
              echo "🎉 Merged PR #$pr_number"
            else
              echo "⏳ PR #$pr_number not ready to merge (status: $pr_status)"
            fi
          else
            echo "📝 No existing automated PR found"
          fi

  create-flaky-pr:
    name: 🎲 Create New Automated Flaky Test PR
    needs: merge-existing-pr
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: main
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

    - name: Configure Git
      run: |
        git config --global user.name "flaky-test-bot"
        git config --global user.email "flaky-test-bot@users.noreply.github.com"

    - name: Read current run count
      id: read_count
      run: |
        if [ -f runs.txt ]; then
          CURRENT_COUNT=$(cat runs.txt)
        else
          CURRENT_COUNT=0
        fi
        NEW_COUNT=$((CURRENT_COUNT + 1))
        echo "current=$CURRENT_COUNT" >> $GITHUB_OUTPUT
        echo "new=$NEW_COUNT" >> $GITHUB_OUTPUT
        echo "📊 Current run count: $CURRENT_COUNT"
        echo "📈 New run count: $NEW_COUNT"

    - name: Update runs.txt
      run: |
        echo "${{ steps.read_count.outputs.new }}" > runs.txt
        echo "📝 Updated runs.txt to: $(cat runs.txt)"

    - name: Create timestamp for PR
      id: timestamp
      run: |
        TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
        echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
        echo "🕒 Timestamp: $TIMESTAMP"


    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        commit-message: "🤖 Automated flaky test run #${{ steps.read_count.outputs.new }}"
        title: "${{ env.PR_TITLE }} #${{ steps.read_count.outputs.new }}"
        body: |
          ## 🤖 Automated Flaky Test Demonstration

          **Run #${{ steps.read_count.outputs.new }}** - ${{ steps.timestamp.outputs.timestamp }}

          This automated PR demonstrates:

          ### 🎯 Flaky Test Behavior
          - Tests have **70%, 80%, and 90%** pass rates
          - Simulates real-world test flakiness
          - Shows importance of retry strategies

          ### 🔄 Auto-Retry Mechanism
          - CI will retry failed tests up to **10 attempts**
          - Each retry is tracked in GitHub Actions API
          - Uses `nick-fields/retry` action for proper logging

          ### 🤖 Automation Features
          - **Hourly schedule**: Creates PR every hour
          - **Auto-merge**: Merges when tests pass and checks are clean
          - **Run tracking**: Updates `runs.txt` counter

          ### 📊 Expected Behavior
          1. ✅ Tests may pass on first try (~50% chance)
          2. 🔄 Or retry 2-4 times before passing
          3. 🎉 Auto-merge when all tests green
          4. 📈 Counter increments for next run

          ### 📈 Data Collection
          This PR is part of ongoing flaky test data collection to analyze:
          - Retry patterns over time
          - Success rates across languages
          - CI/CD resilience strategies

          ---
          *This is run #${{ steps.read_count.outputs.new }} of the automated flaky test demonstration.*
        labels: |
          automated
          flaky-test-demo
          data-collection
        branch: ${{ env.PR_BRANCH }}-${{ steps.read_count.outputs.new }}
        delete-branch: true
