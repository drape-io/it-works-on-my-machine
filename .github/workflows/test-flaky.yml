name: 🎲 Flaky Test Demonstration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-python:
    name: 🐍 Python Flaky Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.12
    
    - name: Install just
      uses: extractions/setup-just@v2
    
    - name: Install Python dependencies
      run: just install-python
    
    - name: Run Python tests (with retries for flakiness)
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 10
        max_attempts: 3
        retry_wait_seconds: 5
        command: just test-python-coverage
        shell: bash
    
    - name: Upload Python coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: python-coverage
        path: |
          python/coverage.xml
          python/htmlcov/
        retention-days: 30

  test-go:
    name: 🐹 Go Flaky Tests  
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
    
    - name: Install just
      uses: extractions/setup-just@v2
    
    - name: Run Go tests (with retries for flakiness)
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 10
        max_attempts: 3
        retry_wait_seconds: 5
        command: just test-go-coverage
        shell: bash
    
    - name: Upload Go coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: go-coverage
        path: |
          go/coverage.out
          go/coverage.html
        retention-days: 30

  test-typescript:
    name: 📘 TypeScript Flaky Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: typescript/package-lock.json
    
    - name: Install just
      uses: extractions/setup-just@v2
    
    - name: Install TypeScript dependencies
      run: just install-ts
    
    - name: Run TypeScript tests (with retries for flakiness)
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 10
        max_attempts: 3
        retry_wait_seconds: 5
        command: just test-ts-coverage
        shell: bash
    
    - name: Upload TypeScript coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: typescript-coverage
        path: |
          typescript/coverage/
          typescript/junit.xml
        retention-days: 30

  test-summary:
    name: 📊 Test Summary
    runs-on: ubuntu-latest
    needs: [test-python, test-go, test-typescript]
    if: always()
    steps:
    - name: Test Results Summary
      run: |
        echo "## 🎲 Flaky Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Language | Result | Notes |" >> $GITHUB_STEP_SUMMARY
        echo "|----------|--------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| 🐍 Python | ${{ needs.test-python.result }} | Probabilistic tests with 75%, 85%, 95% pass rates |" >> $GITHUB_STEP_SUMMARY
        echo "| 🐹 Go | ${{ needs.test-go.result }} | Probabilistic tests with retry logic |" >> $GITHUB_STEP_SUMMARY  
        echo "| 📘 TypeScript | ${{ needs.test-typescript.result }} | Jest-based flaky tests |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🎯 About This Project" >> $GITHUB_STEP_SUMMARY
        echo "This project demonstrates **intentionally flaky tests** for testing CI/CD resilience." >> $GITHUB_STEP_SUMMARY
        echo "Tests are designed to fail ~20-40% of the time to simulate real-world flakiness." >> $GITHUB_STEP_SUMMARY
        echo "The retry logic shows how to handle flaky tests in production CI pipelines." >> $GITHUB_STEP_SUMMARY
