name: 🎯 Flaky Test Demonstration

on:
  workflow_dispatch:
    inputs:
      runs:
        description: 'Number of test runs to demonstrate flakiness'
        required: true
        default: '10'
        type: string
      language:
        description: 'Language to test'
        required: true
        default: 'python'
        type: choice
        options:
        - python
        - go
        - typescript
        - all

jobs:
  demonstrate-flakiness:
    name: 🎲 Demonstrate Flaky Tests (${{ github.event.inputs.language }})
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      if: github.event.inputs.language == 'python' || github.event.inputs.language == 'all'
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        uv python install 3.12
    
    - name: Set up Go
      if: github.event.inputs.language == 'go' || github.event.inputs.language == 'all'
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
    
    - name: Set up Node.js
      if: github.event.inputs.language == 'typescript' || github.event.inputs.language == 'all'
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: typescript/package-lock.json
    
    - name: Install just
      uses: extractions/setup-just@v2
    
    - name: Install dependencies
      run: |
        if [[ "${{ github.event.inputs.language }}" == "python" || "${{ github.event.inputs.language }}" == "all" ]]; then
          just install-python
        fi
        if [[ "${{ github.event.inputs.language }}" == "go" || "${{ github.event.inputs.language }}" == "all" ]]; then
          just install-go
        fi
        if [[ "${{ github.event.inputs.language }}" == "typescript" || "${{ github.event.inputs.language }}" == "all" ]]; then
          just install-ts
        fi
    
    - name: Run flaky tests multiple times
      run: |
        echo "🎲 Running ${{ github.event.inputs.language }} tests ${{ github.event.inputs.runs }} times to demonstrate flakiness"
        echo "## 🎯 Flaky Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ github.event.inputs.language }}" == "all" ]]; then
          echo "### 🐍 Python Results" >> $GITHUB_STEP_SUMMARY
          just test-flaky python ${{ github.event.inputs.runs }} | tee python_results.txt
          echo '```' >> $GITHUB_STEP_SUMMARY
          tail -5 python_results.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### 🐹 Go Results" >> $GITHUB_STEP_SUMMARY
          just test-flaky go ${{ github.event.inputs.runs }} | tee go_results.txt
          echo '```' >> $GITHUB_STEP_SUMMARY
          tail -5 go_results.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### 📘 TypeScript Results" >> $GITHUB_STEP_SUMMARY
          just test-flaky typescript ${{ github.event.inputs.runs }} | tee ts_results.txt
          echo '```' >> $GITHUB_STEP_SUMMARY
          tail -5 ts_results.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        else
          just test-flaky ${{ github.event.inputs.language }} ${{ github.event.inputs.runs }} | tee results.txt
          echo '```' >> $GITHUB_STEP_SUMMARY
          tail -10 results.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🎯 **This demonstrates intentional test flakiness for CI/CD resilience testing!**" >> $GITHUB_STEP_SUMMARY
