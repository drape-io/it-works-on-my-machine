name: ðŸ”§ Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quick-test:
    name: ðŸš€ Quick Test Suite
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [python, go, typescript]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      if: matrix.language == 'python'
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        uv python install 3.12
    
    - name: Set up Go
      if: matrix.language == 'go'
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
    
    - name: Set up Node.js
      if: matrix.language == 'typescript'
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: typescript/package-lock.json
    
    - name: Install just
      uses: extractions/setup-just@v2
    
    - name: Install dependencies
      run: just install-${{ matrix.language }}
    
    - name: Run tests with limited retries
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 5
        max_attempts: 2
        retry_wait_seconds: 3
        command: just test-${{ matrix.language }}
        shell: bash
        on_retry_command: |
          echo "ðŸ”„ Retrying ${{ matrix.language }} tests - flaky behavior expected!"
        retry_on: error
    
    - name: Report test completion
      if: always()
      run: |
        echo "## ðŸŽ¯ Test Results for ${{ matrix.language }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Tests completed for ${{ matrix.language }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**About this project:**" >> $GITHUB_STEP_SUMMARY
        echo "- Tests are designed with 75%, 85%, and 95% pass rates" >> $GITHUB_STEP_SUMMARY
        echo "- This simulates real-world test flakiness" >> $GITHUB_STEP_SUMMARY
        echo "- Retry actions demonstrate CI/CD resilience patterns" >> $GITHUB_STEP_SUMMARY

  lint-check:
    name: ðŸ§¹ Lint and Format Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install just
      uses: extractions/setup-just@v2
    
    - name: Check justfile syntax
      run: just --list
    
    - name: Validate YAML files
      run: |
        # Check if GitHub Actions YAML files are valid
        for file in .github/workflows/*.yml; do
          echo "Checking $file"
          cat "$file" | python -c "import yaml, sys; yaml.safe_load(sys.stdin)"
        done
